// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NRCan.Datahub.ProjectForms.Data.PIP;

namespace NRCan.Datahub.ProjectForms.Migrations
{
    [DbContext(typeof(PIPDBContext))]
    [Migration("20210310180016_modelchanges2")]
    partial class modelchanges2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("NRCan.Datahub.ProjectForms.Data.PIP.PIP_IndicatorAndResults", b =>
                {
                    b.Property<int>("IndicatorAndResult_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Baseline_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Branch_Optional_DESC")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Data_Owner_NAME")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Data_Source_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Data_Type_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Date_201920_Result_Collected_DT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Of_Baseline_DT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_To_Achieve_Target_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Does_This_Indicator_Support_Gba")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Frequency_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("If_Yes_Please_Provide_An_Explanation_Of_How")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Indicator_Calculation_Formula_NUM")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Indicator_Category_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Indicator_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Indicator_Direction_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Indicator_Rationale_DESC")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Indicator__Progressive_Or_Aggregate_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Last_Updated_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Methodology_How_Will_The_Indicator_Be_Measured")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Outcome_Level_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PIP_TombstoneTombstone_ID")
                        .HasColumnType("int");

                    b.Property<string>("Program_Output_Or_Outcome_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Result_201718_DESC")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Result_201819_DESC")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Result_201920_DESC")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Source_Of_Indicator_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Target_202021_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Target_Met")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Target_Type_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tb_Sub_Indicator_Identification_Number_ID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("IndicatorAndResult_ID");

                    b.HasIndex("PIP_TombstoneTombstone_ID");

                    b.ToTable("IndicatorAndResults");
                });

            modelBuilder.Entity("NRCan.Datahub.ProjectForms.Data.PIP.PIP_IndicatorRisks", b =>
                {
                    b.Property<int>("IndicatorRisk_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Pip_IndicatorIndicatorAndResult_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Pip_RiskRisks_ID")
                        .HasColumnType("int");

                    b.HasKey("IndicatorRisk_ID");

                    b.HasIndex("Pip_IndicatorIndicatorAndResult_ID");

                    b.HasIndex("Pip_RiskRisks_ID");

                    b.ToTable("IndicatorRisks");
                });

            modelBuilder.Entity("NRCan.Datahub.ProjectForms.Data.PIP.PIP_Risks", b =>
                {
                    b.Property<int>("Risks_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Comments_TXT")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Future_Mitigation_Activities_TXT")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Future_Mitigation_Activities_TXT2")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Future_Mitigation_Activities_TXT3")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Future_Mitigation_Activities_TXT4")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Future_Mitigation_Activities_TXT5")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Last_Updated_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ongoing_Monitoring_Activities_TXT")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ongoing_Monitoring_Activities_TXT2")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ongoing_Monitoring_Activities_TXT3")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ongoing_Monitoring_Activities_TXT4")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ongoing_Monitoring_Activities_TXT5")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PIP_TombstoneTombstone_ID")
                        .HasColumnType("int");

                    b.Property<string>("Relevant_Corporate_Priorities_TXT")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relevant_Corporate_Risks_TXT")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Residual_Risk_Level_TXT")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Risk_Category")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Risk_Description_TXT")
                        .IsRequired()
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Risk_Drivers_TXT")
                        .IsRequired()
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Risk_Id_TXT")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Risk_Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Risk_Trend_TXT")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target_Risk_Level_TXT")
                        .HasMaxLength(7500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Risks_ID");

                    b.HasIndex("PIP_TombstoneTombstone_ID");

                    b.ToTable("Risks");
                });

            modelBuilder.Entity("NRCan.Datahub.ProjectForms.Data.PIP.PIP_Tombstone", b =>
                {
                    b.Property<int>("Tombstone_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Actual_Spending_AMTL")
                        .HasColumnType("Money");

                    b.Property<DateTime?>("Approval_By_Program_Offical_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Canadian_Classification_Of_Functions_Of_Government_DESC")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime?>("Consultation_With_The_Head_Of_Evaluation_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Core_Responsbility_DESC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Date_Updated_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Departmental_Result_1_CD")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Departmental_Result_2_CD")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime?>("Functional_SignOff_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Government_Of_Canada_Activity_Tags_DESC")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Government_Of_Canada_Outcome_Areas_1_DESC")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Government_Of_Canada_Outcome_Areas_2_DESC")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Horizontal_Initiative_1_DESC")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Horizontal_Initiative_2_DESC")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime>("Last_Updated_DT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lead_Sector")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mandate_Letter_Commitment_1_DESC")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Mandate_Letter_Commitment_2_DESC")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Method_Of_Intervention_1_DESC")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Method_Of_Intervention_2_DESC")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<decimal>("Planned_Spending_AMTL")
                        .HasColumnType("Money");

                    b.Property<string>("Program_Inventory_Program_Description_URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program_Official_Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Program_Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Strategic_Priorities_1_DESC")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Strategic_Priorities_2_DESC")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Target_Group_1_DESC")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Target_Group_2_DESC")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Target_Group_3_DESC")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Target_Group_4_DESC")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Target_Group_5_DESC")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Transfer_Payment_Programs_1_DESC")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Transfer_Payment_Programs_2_DESC")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("Tombstone_ID");

                    b.ToTable("Tombstones");
                });

            modelBuilder.Entity("NRCan.Datahub.ProjectForms.Data.PIP.PIP_TombstoneRisks", b =>
                {
                    b.Property<int>("TombstoneRisk_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Pip_RiskRisks_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Pip_TombstoneTombstone_ID")
                        .HasColumnType("int");

                    b.HasKey("TombstoneRisk_ID");

                    b.HasIndex("Pip_RiskRisks_ID");

                    b.HasIndex("Pip_TombstoneTombstone_ID");

                    b.ToTable("TombstoneRisks");
                });

            modelBuilder.Entity("NRCan.Datahub.ProjectForms.Data.PIP.PIP_IndicatorAndResults", b =>
                {
                    b.HasOne("NRCan.Datahub.ProjectForms.Data.PIP.PIP_Tombstone", "PIP_Tombstone")
                        .WithMany()
                        .HasForeignKey("PIP_TombstoneTombstone_ID");

                    b.Navigation("PIP_Tombstone");
                });

            modelBuilder.Entity("NRCan.Datahub.ProjectForms.Data.PIP.PIP_IndicatorRisks", b =>
                {
                    b.HasOne("NRCan.Datahub.ProjectForms.Data.PIP.PIP_IndicatorAndResults", "Pip_Indicator")
                        .WithMany()
                        .HasForeignKey("Pip_IndicatorIndicatorAndResult_ID");

                    b.HasOne("NRCan.Datahub.ProjectForms.Data.PIP.PIP_Risks", "Pip_Risk")
                        .WithMany("PIP_IndicatorRisks")
                        .HasForeignKey("Pip_RiskRisks_ID");

                    b.Navigation("Pip_Indicator");

                    b.Navigation("Pip_Risk");
                });

            modelBuilder.Entity("NRCan.Datahub.ProjectForms.Data.PIP.PIP_Risks", b =>
                {
                    b.HasOne("NRCan.Datahub.ProjectForms.Data.PIP.PIP_Tombstone", "PIP_Tombstone")
                        .WithMany()
                        .HasForeignKey("PIP_TombstoneTombstone_ID");

                    b.Navigation("PIP_Tombstone");
                });

            modelBuilder.Entity("NRCan.Datahub.ProjectForms.Data.PIP.PIP_TombstoneRisks", b =>
                {
                    b.HasOne("NRCan.Datahub.ProjectForms.Data.PIP.PIP_Risks", "Pip_Risk")
                        .WithMany()
                        .HasForeignKey("Pip_RiskRisks_ID");

                    b.HasOne("NRCan.Datahub.ProjectForms.Data.PIP.PIP_Tombstone", "Pip_Tombstone")
                        .WithMany()
                        .HasForeignKey("Pip_TombstoneTombstone_ID");

                    b.Navigation("Pip_Risk");

                    b.Navigation("Pip_Tombstone");
                });

            modelBuilder.Entity("NRCan.Datahub.ProjectForms.Data.PIP.PIP_Risks", b =>
                {
                    b.Navigation("PIP_IndicatorRisks");
                });
#pragma warning restore 612, 618
        }
    }
}
